{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\nd0191-c1-myreads-main\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Search from \"./components/Search.js\";\nimport Library from \"./components/Library.js\";\nimport { update, getAll } from \"./BooksAPI.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [updated, setUpdated] = useState([]);\n  const [myBooks, setMyBooks] = useState([]); // api call for updating the backend\n\n  const updateBackend = (book, newShelf) => {\n    const myUpdate = async () => {\n      const updated = await update(book, newShelf);\n      setUpdated(updated); // to trigger a rerender\n      // for library to update UI\n    };\n\n    myUpdate();\n  }; // api call for getting all books from the backend\n\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const response = await getAll();\n      setMyBooks(response);\n    };\n\n    getAllBooks();\n  }, [updated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Library, {\n          update: updateBackend,\n          books: myBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {\n          update: updateBackend,\n          backendBooks: myBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CVLKD3YhCGmHVSpqY9M/DKgTk+8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/nd0191-c1-myreads-main/starter/src/App.js"],"names":["useState","useEffect","Route","Routes","Search","Library","update","getAll","App","updated","setUpdated","myBooks","setMyBooks","updateBackend","book","newShelf","myUpdate","getAllBooks","response"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,eAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAIb;;AACA,QAAMa,aAAa,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACxC,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMP,OAAO,GAAG,MAAMH,MAAM,CAACQ,IAAD,EAAOC,QAAP,CAA5B;AACAL,MAAAA,UAAU,CAACD,OAAD,CAAV,CAF2B,CAG3B;AACA;AACD,KALD;;AAMAO,IAAAA,QAAQ;AACT,GARD,CALa,CAeb;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAG,YAAY;AAC9B,YAAMC,QAAQ,GAAG,MAAMX,MAAM,EAA7B;AACAK,MAAAA,UAAU,CAACM,QAAD,CAAV;AACD,KAHD;;AAIAD,IAAAA,WAAW;AACZ,GANQ,EAMN,CAACR,OAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,OAAO,eAAE,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEI,aAAjB;AAAgC,UAAA,KAAK,EAAEF;AAAvC;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEE,aAAhB;AAA+B,UAAA,YAAY,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvCQH,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Search from \"./components/Search.js\";\nimport Library from \"./components/Library.js\";\nimport { update, getAll } from \"./BooksAPI.js\";\n\nfunction App() {\n  const [updated, setUpdated] = useState([]);\n  const [myBooks, setMyBooks] = useState([]);\n\n  // api call for updating the backend\n  const updateBackend = (book, newShelf) => {\n    const myUpdate = async () => {\n      const updated = await update(book, newShelf);\n      setUpdated(updated);\n      // to trigger a rerender\n      // for library to update UI\n    };\n    myUpdate();\n  };\n\n  // api call for getting all books from the backend\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const response = await getAll();\n      setMyBooks(response);\n    };\n    getAllBooks();\n  }, [updated]);\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={<Library update={updateBackend} books={myBooks} />}\n        />\n        <Route\n          path=\"/search\"\n          element={<Search update={updateBackend} backendBooks={myBooks} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}