{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\nd0191-c1-myreads-main\\\\starter\\\\src\\\\components\\\\SearchBook.js\";\nimport Cover from \"./Cover.js\";\nimport Dropdown from \"./Dropdown.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchBook = ({\n  books,\n  update,\n  backendBooks\n}) => {\n  const findBooks = books => id => books.find(b => b.id === id);\n\n  const findBookById = findBooks(backendBooks);\n\n  const withShelf = obj => {\n    obj.shelf = \"none\";\n    return obj;\n  };\n\n  let comparedBooks = [];\n\n  if (books && books.length > 0) {\n    books.forEach(a => {\n      const found = findBookById(a.id);\n      comparedBooks.push(found !== undefined ? found : withShelf(a));\n    });\n  } // for handling a new select in dropdown\n\n\n  const handleShelf = (event, book) => {\n    const selectedShelf = event.target.value;\n    update(book, selectedShelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comparedBooks && comparedBooks.length > 0 ? comparedBooks.map(book => {\n      if (book.imageLinks) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-top\",\n              children: [/*#__PURE__*/_jsxDEV(Cover, {\n                link: book.imageLinks.smallThumbnail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                handleShelf: handleShelf,\n                book: book\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-title\",\n              children: book.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-authors\",\n              children: book.authors ? book.authors.map((author, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: author\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 32\n                }, this);\n              }) : \"no author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this);\n      } else {\n        return \"\";\n      }\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no books found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = SearchBook;\nexport default SearchBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBook\");","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/nd0191-c1-myreads-main/starter/src/components/SearchBook.js"],"names":["Cover","Dropdown","SearchBook","books","update","backendBooks","findBooks","id","find","b","findBookById","withShelf","obj","shelf","comparedBooks","length","forEach","a","found","push","undefined","handleShelf","event","book","selectedShelf","target","value","map","imageLinks","smallThumbnail","title","authors","author","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AAEtD,QAAMC,SAAS,GAAIH,KAAD,IAAYI,EAAD,IAAQJ,KAAK,CAACK,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACF,EAAF,KAASA,EAA3B,CAArC;;AACA,QAAMG,YAAY,GAAGJ,SAAS,CAACD,YAAD,CAA9B;;AAEA,QAAMM,SAAS,GAAIC,GAAD,IAAS;AACzBA,IAAAA,GAAG,CAACC,KAAJ,GAAY,MAAZ;AACA,WAAOD,GAAP;AACD,GAHD;;AAKA,MAAIE,aAAa,GAAG,EAApB;;AAEA,MAAIX,KAAK,IAAIA,KAAK,CAACY,MAAN,GAAe,CAA5B,EAA+B;AAC7BZ,IAAAA,KAAK,CAACa,OAAN,CAAeC,CAAD,IAAO;AACnB,YAAMC,KAAK,GAAGR,YAAY,CAACO,CAAC,CAACV,EAAH,CAA1B;AACAO,MAAAA,aAAa,CAACK,IAAd,CAAmBD,KAAK,KAAKE,SAAV,GAAsBF,KAAtB,GAA8BP,SAAS,CAACM,CAAD,CAA1D;AACD,KAHD;AAID,GAjBqD,CAmBtD;;;AACA,QAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACnC,UAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAnC;AACAtB,IAAAA,MAAM,CAACmB,IAAD,EAAOC,aAAP,CAAN;AACD,GAHD;;AAKA,sBACE;AAAA,cACGV,aAAa,IAAIA,aAAa,CAACC,MAAd,GAAuB,CAAxC,GACCD,aAAa,CAACa,GAAd,CAAmBJ,IAAD,IAAU;AAC1B,UAAIA,IAAI,CAACK,UAAT,EAAqB;AACnB,4BACE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEL,IAAI,CAACK,UAAL,CAAgBC;AAA7B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AAAU,gBAAA,WAAW,EAAER,WAAvB;AAAoC,gBAAA,IAAI,EAAEE;AAA1C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,wBAA6BA,IAAI,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,wBACGP,IAAI,CAACQ,OAAL,GACGR,IAAI,CAACQ,OAAL,CAAaJ,GAAb,CAAiB,CAACK,MAAD,EAASC,KAAT,KAAmB;AACpC,oCAAO;AAAA,4BAAkBD;AAAlB,mBAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,eAFC,CADH,GAIG;AALN;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAASV,IAAI,CAAChB,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAkBD,OAnBD,MAmBO;AACL,eAAO,EAAP;AACD;AACF,KAvBD,CADD,gBA0BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BJ,mBADF;AAgCD,CAzDD;;KAAML,U;AA2DN,eAAeA,UAAf","sourcesContent":["import Cover from \"./Cover.js\";\r\nimport Dropdown from \"./Dropdown.js\";\r\n\r\nconst SearchBook = ({ books, update, backendBooks }) => {\r\n\r\n  const findBooks = (books) => (id) => books.find((b) => b.id === id);\r\n  const findBookById = findBooks(backendBooks);\r\n\r\n  const withShelf = (obj) => {\r\n    obj.shelf = \"none\";\r\n    return obj;\r\n  };\r\n\r\n  let comparedBooks = [];\r\n\r\n  if (books && books.length > 0) {\r\n    books.forEach((a) => {\r\n      const found = findBookById(a.id);\r\n      comparedBooks.push(found !== undefined ? found : withShelf(a));\r\n    });\r\n  }\r\n\r\n  // for handling a new select in dropdown\r\n  const handleShelf = (event, book) => {\r\n    const selectedShelf = event.target.value;\r\n    update(book, selectedShelf);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {comparedBooks && comparedBooks.length > 0 ? (\r\n        comparedBooks.map((book) => {\r\n          if (book.imageLinks) {\r\n            return (\r\n              <li key={book.id}>\r\n                <div className=\"book\">\r\n                  <div className=\"book-top\">\r\n                    <Cover link={book.imageLinks.smallThumbnail} />\r\n                    <Dropdown handleShelf={handleShelf} book={book} />\r\n                  </div>\r\n                  <div className=\"book-title\">{book.title}</div>\r\n                  <div className=\"book-authors\">\r\n                    {book.authors\r\n                      ? book.authors.map((author, index) => {\r\n                        return <div key={index}>{author}</div>;\r\n                      })\r\n                      : \"no author\"}\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          } else {\r\n            return \"\";\r\n          }\r\n        })\r\n      ) : (\r\n        <p>no books found</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBook;"]},"metadata":{},"sourceType":"module"}